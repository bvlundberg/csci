x <- function(x){}
x <- function(x){}
x <- function(x){x^2}
x(2)
grades <- function(x){if x >= 85}
grades <- function(x){
if x >= 85{
return "A"
}
else{
return "F"
}
}
ls()
x
getwd()
grades
grades <- function(x){if x >= 85{return "A"}}
x <- function(x){x^2}
grades <- function(x){if (x >= 85) {return "A"}}
grades <- function(x){if (x >= 85) {"A"}}
grades <- function(x){if (x >= 85) {"A"} else if (x >= 75){"B"} else if (x >= 65){"C"}else if(x >= 55){"D"}else{"F"}}
grades(100)
grades(50)
grades
Time <- c(4,5,6,7,4,5,6,7,4,5,6,7)
Loss <- c(4.3,5.5,6.8,8,4,5.2,6.6,7.5,2,4,5.7,6.5)
model <- lm(Loss ~ Time)
model
summary(model)
setwd("C://Users/Brandon/repos/csci/spring16/Math191T/")
load("C:/Users/Brandon/repos/csci/spring16/Math191T/workspace.RData")
myData[myData$rank = 1,]
myData[myData$rank == 1,]
nrow(myData[myData$rank == 1,])
nrow(myData[myData$rank == 2,])
nrow(myData[myData$rank == 3,])
nrow(myData[myData$rank == 5,])
nrow(myData[myData$rank == 4,])
nrow(accepted[accepted$rank == 1,])
nrow(accepted[accepted$rank == 2,])
nrow(accepted[accepted$rank == 4,])
nrow(accepted[accepted$rank == 3,])
newData < read.csv("admission.csv")
newData <- read.csv("admission.csv")
newData
attach(newData)
logit <- glm(admit ~ gre + gpa + rank1 + rank2 + rank3 + rank4, family = binomial)
summary(logit)
load("admissionfunctions.R")
source("admissionfunctions.R")
newadmitvalue(3.5, 800, 1)
newadmitvalue(3.5, 800, 2)
source("admissionfunctions.R")
newadmitvalue(3.5, 800, 2)
newadmitvalue(3, 300, 2)
newadmitvalue(3, 400, 2)
newadmitvalue(3, 500, 2)
newadmitvalue(3, 600, 2)
newadmitvalue(3, 700, 2)
newadmitvalue(3.21, 700, 3)
newadmitvalue(3.38, 680, 3)
newadmitvalue(3.89, 500, 3)
newadmitvalue(3, 710, 3)
newadmitvalue(4, 500, 3)
newadmitvalue(2.89, 400, 2)
> logit <- glm(admit ~ gre, family = binomial)
> summary(logit)
logit <- glm(admit ~ gre, family = binomial)
summary(logit)
plot(gre, admit)
curve(predict(logit, data.frame(gre=x), type="response"), add=TRUE, col="blue")
logit <- glm(admit ~ rank, family = binomial)
summary(logit)
plot(rank, admit)
curve(predict(logit, data.frame(rank=x), type="response"), add=TRUE, col="blue")
attach(myData)
plot(rank, admit)
curve(predict(logit, data.frame(rank=x), type="response"), add=TRUE, col="blue")
newdara
newdata
newData
attach(myData)
plot(rank, admit)
curve(predict(logit, data.frame(rank=x), type="response"), add=TRUE, col="blue")
> logit <- glm(admit ~ rank, family = binomial)
> summary(logit)
logit <- glm(admit ~ rank, family = binomial)
summary(logit)
plot(rank, admit)
curve(predict(logit, data.frame(rank=x), type="response"), add=TRUE, col="blue")
